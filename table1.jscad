aplat = function() {
	vec2 			= function (v) {
    vv = [v.pos.x, v.pos.y];
    // vv.x !== undefined ||
    if (vv.length != 2 || isNaN(vv[0]+vv[1])) 
	{ //console.log('v should be a float[2]: ', JSON.stringify(v.pos));
		return -1;
	}
    else
		return new CSG.Vector2D(vv);
};
	centre			= function (d) {
var r, i;

if(d[0].z){
    r = new CSG.Vector3D([0, 0, 0]);
}else{
    r = new CSG.Vector2D([0, 0]);
}

    for(i=0; i<d.length; i++){
        r = r.plus(d[i]);
    }
    r = r.dividedBy(d.length);
    
    return r;
};
	fait_nombres	= function (){
var np = [
[[0,0],[0,16],[8,16],[8,0],[0,0]],
[[0,8],[8,16],[8,0]],
[[0,12],[0,16],[8,16],[8,8],[0,8],[0,0],[8,0]],
[[0,13],[0,16],[8,16],[8,11],[4,8],[8,5],[8,0],[0,0],[0,3]],
[[8,8],[0,8],[6,16],[6,0]],
[[8,16],[0,16],[0,8],[8,8],[8,0],[0,0]],
[[8,16],[0,8],[0,0],[8,0],[8,8],[0,8]],
[[0,16],[8,16],[0,0]],
[[4,9],[1,12],[1,16],[7,16],[7,12],[4,9],[8,7],[8,0],[0,0],[0,7],[4,9]],
[[8,8],[0,8],[0,16],[8,16],[8,0],[0,0]]
];
for(var i in np)
    _num[i] = new CSG.Path2D(np[i]).expandToCAG(_ghEncoche).scale(_gTextScale);
};
	nombreCentre	= function (center, n, estPetit){
var label = nombre(n);

if(estPetit)label = label.scale(0.75);
var B = label.getBounds();
var dx = B[1].x - B[0].x, dy = B[1].y - B[0].y;

return label.translate([center.x - dx/2, center.y-dy/2 , 0]);
};
	nombre			= function (n){
if (_num.length === 0)fait_nombres();
var ch = n.toString();
var r = null;
for(var i=0; i<ch.length; i++){
    var c = ch.charCodeAt(i) - 48;
    var t = _num[c].translate([i*11*_gTextScale, 0]);
	r = (r === null ? t : r.union(t));
}
return r;
};
	encoche			= function (p,n) {
s = p[n];
e = p[(n+1)%3];
o = p[(n+2)%3];

d = e.minus(s);
p = d.normal().unit().times(_ghEncoche);
antip = p.times(-1);
if(s.plus(p).minus(o).lengthSquared() <
    s.plus(antip).minus(o).lengthSquared()){
        p = antip;
}

bs = s;
be = e;
te = s.plus(d.times(0.65)).plus(p);
ts = s.plus(d.times(0.35)).plus(p);

return [bs, ts, te, be];
};
	creeTriangle	= function (T, C) {
var poly, p, v, P2D;

poly = V.polygons[T];
p = CSG.fromPolygons([poly]).lieFlat();
if(C)p = p.translate(C);

v = p.polygons[0].vertices;
/*P2D =   [vec2([v[0].pos.x, v[0].pos.y])
        ,vec2([v[1].pos.x, v[1].pos.y])
        ,vec2([v[2].pos.x, v[2].pos.y])
    ];*/
P2D =   [vec2(v[0])
        ,vec2(v[1])
        ,vec2(v[2])
    ];
data[T] = {};
data[T].triangle = P2D;
};
	reseaute		= function (T) {
    var nbV, n, i, pt, j, d, sI, nv;

    data[T].voisins = [];
    nbV=0;
    for(n=0; n<V.polygons.length; n++){
        if(n != T){
            if(!(n in data)){
                creeTriangle(n);
            }
            // recherche correspondance
            corr = []; sI =0;
            for (i=0;i<3;i++){
                pt = V.polygons[T].vertices[i].pos;
                for(j=0;j<3;j++){
                    d = pt.equals(V.polygons[n].vertices[j].pos);
                    if(d){
                        corr.push({p1:i, p2:j});
                        sI += i;
                    }
                }
            }
            if(corr.length ==2){
                nv= sI-1;
                if(nv)nv= 3-nv;
                data[T].voisins[nv] =
                {id: n, corr: corr};
                nbV++;
            }
        }
        if(nbV == 3){
            break;
        }
    }
};
	afficheTriangle	= function (T) {
var triangle, texte, tmp, D;

if(g_RX)
	aplat.afficheEncoches(T);

triangle = new CSG.Path2D(data[T].triangle, true).expandToCAG(_gLigneE);
texte = nombreCentre(centre(data[T].triangle), T);

// calcul des distances

D = [];
D[0] = Math.hypot(data[T].triangle[1].x - data[T].triangle[0].x, data[T].triangle[1].y - data[T].triangle[0].y);
D[1] = Math.hypot(data[T].triangle[2].x - data[T].triangle[1].x, data[T].triangle[2].y - data[T].triangle[1].y);
D[2] = Math.hypot(data[T].triangle[0].x - data[T].triangle[2].x, data[T].triangle[0].y - data[T].triangle[2].y);
pgPt = D.indexOf(Math.max(...D)); // retour de l'id contenant la distance max
pgPtN = (pgPt <2) ? pgPt+1 : 0;
angleD = 360-(Math.atan2(data[T].triangle[pgPtN].y - data[T].triangle[pgPt].y, data[T].triangle[pgPtN].x - data[T].triangle[pgPt].x) * 180 / Math.PI);

tmp = mkPoly(data[T].triangle, T, angleD);
_r.svg.push(tmp.join('\n'));
_r.cag.push(triangle, texte);
};
aplat.fixeTriangle	= function (T1,T2) {
    var c, dk, ra, tmp, delta, i;
    
    if(T2.constructor === Array){
        for(i in T2){aplat.fixeTriangle(T1,T2[i]);}
    }else{
        //recherche correspondance
        n = false;
        for(i in data[T1].voisins){
            if(data[T1].voisins[i].id == T2){
                n = i;
                break;
            }
        }
        corr = data[T1].voisins[n].corr;
        // translation premier point
        dk = data[T1].triangle[corr[0].p1].minus(data[T2].triangle[corr[0].p2]);
        data[T2].triangle = add2D(data[T2].triangle, dk);

        // rotation si besoin
        ra = 0 - gPrec;
        do{
            ra += gPrec;
            tmp = data[T2].triangle[corr[1].p2]
                .rotate(data[T2].triangle[corr[0].p2], [0,0,1],ra);
            delta = tmp.distanceTo(data[T1].triangle[corr[1].p1]);
        }while((delta > gPrec) && (ra < 360));

        if(delta<= gPrec){
            data[T2].triangle = rotZ2D(data[T2].triangle, data[T2].triangle[corr[0].p2], ra);
        }
        reseaute(T2);
        afficheTriangle(T2);        
    }
};
aplat.fixeTriangles	= function (T){
    var i;
    for(i=0;i<T.length-1;i++){
        aplat.fixeTriangle(T[i], T[i+1]);
    }
//    if(g_RX)
//        aplat.afficheEncoches(T[T.length-1]);
};
aplat.poseTriangle	= function (T, C, a) {
    creeTriangle(T, C);
    if(a)
        data[T].triangle = rotZ2D(data[T].triangle, centre(data[T].triangle), a);
    
    reseaute(T);
    afficheTriangle(T);
};
aplat.afficheEncoches	= function (T) {
    var i, tmp;
    
    if(T.constructor === Array){
        for(i in T) {afficheEncoches(T[i]);}
    }else{

        for(i = 0; i < 3; i++){
            tmp = afficheEncoche(T, i);
        }
    }
};
	afficheEncocheN	= function (T, E) {
    var n, i;

    if(E.constructor === Array){
        for(i in E){
            afficheEncocheN(T,E[i]);
        }
    }else{
        n = -1;
        for(i in data[T].voisins){
            if(data[T].voisins[i].id == E){
            n = i;
            break;
        }
        }

        if(n >-1){
            afficheEncoche(T, n);
        }
    }
};
	afficheEncoche	= function (nT, nE) {
var tmp, R1, R2, rTmp, angleD;

tmp = encoche(data[nT].triangle, nE);
R1 = new CSG.Path2D(tmp, true).expandToCAG(_gLigneE);
ch = data[nT].voisins[nE].id;
if(ch== null)ch="!";
R2 = nombreCentre(centre(tmp), ch, true);
angleD = 360-(Math.atan2(tmp[2].y - tmp[1].y, tmp[2].x - tmp[1].x) * 180 / Math.PI);
//rTmp = mkPolyEncoche(tmp, ch, angleD, nT);
 tEnc.push(mkPolyEncoche(tmp, ch, angleD, nT));
//_r.svg.push(rTmp.join('\n'));
_r.cag.push(R1,R2);
};
	add2D			= function (d, v) {
    return d.map((Vector2D) => Vector2D.plus(v));
};
	rotZ2D			= function (d, O, ra) {
    return d.map((Vector2D) => Vector2D.rotate(O, [0,0,1], ra));
};
aplat.lotEncoches	= function (L) {
L.forEach(function(a){
			aplat.afficheEncocheN(a[0],a[1]);
		});
};
	mkPoly			= function (pts,nT, angleD){
var R = [], i, ch, chP, chID;
    

tmp = centre(pts);
c =  {x:tmp.x, y:200 - tmp.y};

for(i=0; i< pts.length; i++){
	nx = i;
	ny = i+1;
	if (ny == pts.length)ny = 0;
	if((pts[nx].x < pts[ny].x) || ((pts[nx].x == pts[ny].x) && (pts[nx].y < pts[ny].y) )){
		nx = ny;
		ny = i;
	}
	ch = '<line x1="%1" y1="%2" x2="%3" y2="%4" />';
	ch = ch.replace("%1", (pts[nx].x*_gSVGScale).toFixed(2));
	ch = ch.replace("%2", ((200-pts[nx].y)*_gSVGScale).toFixed(2));
	ch = ch.replace("%3", (pts[ny].x*_gSVGScale).toFixed(2));
	ch = ch.replace("%4", ((200-pts[ny].y)*_gSVGScale).toFixed(2));
	R.push(ch);
}

chID = "id='"+ nT 
    + '_' + data[nT].voisins[0].id
    + '_' + data[nT].voisins[1].id
    + '_' + data[nT].voisins[2].id
    + "' ";

cx = (c.x*_gSVGScale).toFixed(2);
cy = (c.y*_gSVGScale).toFixed(2);
angleD = angleD % 360;
if(angleD){
	chRot = 'transform="rotate(' + angleD + ', ' + cx + ', ' + cy + ')" ';
}else{
	chRot = "";
}

R.push('<g>');
R.push(mkText(cx,cy,nT,chID));
R.push("</g>");

return R;
};

	mkPolyEncoche	= function (pts,nT, angleD, nO) {
var R = [], i, ch, chP, chID, p = [], tmp, c, cx, cy;

p.push(pts[0]);
p.push(pts[0].plus(pts[0].minus(pts[1])));
p.push(pts[3].plus(pts[3].minus(pts[2])));
p.push(pts[3]);

tmp = centre(p);
c =  {x:tmp.x, y:200 - tmp.y};

tmp2 = centre ([pts[0],pts[3]]);


cx = parseFloat((c.x*_gSVGScale));
cy = parseFloat((c.y*_gSVGScale));
angleD = (angleD % 360)-180;
cxr = (cx- _gSVGScale/(angleD<180?-2:2));

R.push('<g id="ge_'+ (100 + parseInt(tmp2.x*10)) +'_'+ parseInt(tmp2.y*10) 
	//+'@'+nT 
	+'" transform="rotate(' + angleD.toFixed(2) + ', ' 
	+ cxr.toFixed(2) + ', ' + cy.toFixed(2) + ')" >'
	+ mkText(cx,cy, nT) + "</g>"
);

return R;
};

		mkText		= function (cx, cy, n, chID = "") {
var r, chN = n.toString();

switch(chN.length){
case 3:
	r =	mkUseT(cx - (1.2*_gSVGScale),cy,chN.charAt(0),chID) 
		+ mkUseT(cx - (0.6*_gSVGScale),cy,chN.charAt(1),chID)
		+ mkUseT((0*_gSVGScale)+ cx,cy,chN.charAt(2),chID);
	break;
case 2:
	r = mkUseT(cx - (0.8*_gSVGScale),cy,chN.charAt(0),chID)
		+ mkUseT(cx, cy,chN.charAt(1),chID);
	break;
case 1:
	r = mkUseT(cx - (0.4*_gSVGScale),cy,chN,chID);
}
return r;
}

function mkUseT(x, y, n, id){
	var chN = id == "" ? 'n' : 't';
	xx = parseFloat(x); yy = parseFloat(y);
	
	return '<use x="' + xx.toFixed(2)
		+'" y="'+ yy.toFixed(2)
		+ '" xlink:href="#'+chN +n +'" ' +id+ ' stroke="blue" />';
}

	initSvg			= function (a){
	a.svg = [
'<svg  xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="210mm" height="297mm" viewBox="0 0 210mm 297mm">',
'<style type="text/css" >',
'<![CDATA[',
'svg {position:relative;}',
'path {fill:none; stroke-width:1px;stroke-linejoin:round;position:relative;z-index:0;}',
'path.L {stroke:black}',
'line {stroke-width:1px;stroke:#0000FF;}',
//'line.P {stroke:#ff0000; stroke-dasharray:16 16;}',
'line.P {stroke:#ff0000;}',
']]>',
'</style>',
'<defs>',
'<path id="n0" d="M0,0 L0,16 L8,16 L8,0 L0,0" stroke="black" />',
'<path id="n1" d="M0,8 L8,0 L8,16" stroke="black" />',
'<path id="n2" d="M0,4 L0,0 L8,0 L8,8 L0,8 L0,16 L8,16" stroke="black" />',
'<path id="n3" d="M0,13 L0,16 L8,16 L8,11 L4,8 L8,5 L8,0 L0,0 L0,3" stroke="black" />',
'<path id="n4" d="M8,8 L0,8 L6,0 L6,16" stroke="black" />',
'<path id="n5" d="M8,0 L0,0 L0,8 L8,8 L8,16 L0,16" stroke="black" />',
'<path id="n6" d="M8,0 L0,8 L0,16 L8,16 L8,8 L0,8" stroke="black" />',
'<path id="n7" d="M0,0 L8,0 L0,16" stroke="black" />',
'<path id="n8" d="M4,7 L1,4 L1,0 L7,0 L7,4 L4,7 L8,9 L8,16 L0,16 L0,9 L4,7" stroke="black" />',
'<path id="n9" d="M8,8 L0,8 L0,0 L8,0 L8,16 L0,16" stroke="black" />',
'<path id="t0" d="M0,0 L0,16 L8,16 L8,0 L0,0" stroke="green" />',
'<path id="t1" d="M0,8 L8,0 L8,16" stroke="green" />',
'<path id="t2" d="M0,4 L0,0 L8,0 L8,8 L0,8 L0,16 L8,16" stroke="green" />',
'<path id="t3" d="M0,13 L0,16 L8,16 L8,11 L4,8 L8,5 L8,0 L0,0 L0,3" stroke="green" />',
'<path id="t4" d="M8,8 L0,8 L6,0 L6,16" stroke="green" />',
'<path id="t5" d="M8,0 L0,0 L0,8 L8,8 L8,16 L0,16" stroke="green" />',
'<path id="t6" d="M8,0 L0,8 L0,16 L8,16 L8,8 L0,8" stroke="green" />',
'<path id="t7" d="M0,0 L8,0 L0,16" stroke="green" />',
'<path id="t8" d="M4,7 L1,4 L1,0 L7,0 L7,4 L4,7 L8,9 L8,16 L0,16 L0,9 L4,7" stroke="green" />',
'<path id="t9" d="M8,8 L0,8 L0,0 L8,0 L8,16 L0,16" stroke="green" />',
'</defs>'
];
};

aplat.rendu			= function (R, a){
var i, R2;

initSvg(R);
for(i in a){
//	R.svg.push("<g transform='translate(0 0)'>");
	switch(a[i]){
		case "p1":volume.p1(); break;
		case "p1a":volume.p1a(); break;
		case "p1b":volume.p1b(); break;
		case "p1c":volume.p1c(); break;
		case "p1d":volume.p1d(); break;
		case "p2":volume.p2(); break;
		case "p3":volume.p3(); break;
		case "p4":volume.p4(); break;
		case "p5":volume.p5(); break;
		case "p5a":volume.p5a(); break;
		case "p5b":volume.p5b(); break;
		case "p5c":volume.p5c(); break;
		case "p6":volume.p6(); break;
		case "p6a":volume.p6a(); break;
		case "p6b":volume.p6b(); break;
		case "p7":volume.p7(); break;
		case "p8":volume.p8(); break;
		case "p9":volume.p9(); break;
		case "p10":volume.p10(); break;
		case "p11":volume.p11(); break;
		case "p12":volume.p12(); break;
		case "p13":volume.p13(); break;
		case "p14":volume.p14(); break;
		case "p15":volume.p15(); break;
		case "p16":volume.p16(); break;
		case "p17":volume.p17(); break;
		case "p18":volume.p18(); break;
		case "p19":volume.p19(); break;
	}
//	R.svg.push("</g>");
}
// sortie SVG
R.svg.push("</svg>");
// suppression doublons line
R0 = []; //R avec doublons
R2 = []; //R sans doublons
R2V = []; // valeurs de R2
R2VC = 0;
N = []; //index des lignes doublÃ©es (= pli)
for(i in R.svg){
	ch = R.svg[i];
	chR = ch.split('\n');
	for(j in chR){
		R0.push(chR[j]);
	}
};

function xtV(ch){
	var tmp = ch.split("=");
	return parseFloat(tmp[1]);
};

for(i in R0){
	ch = R0[i];
	ok = true;
	if(ch.startsWith("<line ")){
		ch2 = ch.replace(/"/g,"");
		V = ch2.split(" ");
		V1 = {x1:xtV(V[1]), y1:xtV(V[2]), x2:xtV(V[3]), y2:xtV(V[4])};
		
		for(j=0; j < R2V.length; j++){
			V2 = R2V[j];
			if(V2){
			if(	(Math.abs(V1.x1 - V2.x1) < 0.2)
			  &&(Math.abs(V1.y1 - V2.y1) < 0.2)
			  &&(Math.abs(V1.x2 - V2.x2) < 0.2)
			  &&(Math.abs(V1.y2 - V2.y2) < 0.2)){
				ok = false;
				break;
			}}
		}
		
		if(!ok){
			N.push(j);
		}
	}else{
		V1 = null;
	}
	if(ok){
		R2.push(ch);
		R2V.push(V1);
		if(V1 != null)R2VC++;
	}
}
for(i in N){
	R2[N[i]] = R2[N[i]].replace("line", "line class='P'");
}

fin = R2.pop();

tEnc.sort();

for(i=1;i<=tEnc.length;i++){
	ch1 = String(tEnc[i]);
	v1 = ch1.substring(10, ch1.indexOf('"',10));
	ch2 = String(tEnc[i-1]);
	v2 = ch2.substring(10, ch2.indexOf('"',10));
	if(v1 != v2){
		R2.push(ch2);
	} else {
		i++;
	}
}

//R2.push(tmp.join('\n'));
R2.push(fin);

console.log(R2.join('\n'));
}

}

// TABLE BASSE EN BISEAU #1 : quart 
volume = function () {
function main() { return polyhedron({ points: [
  [0.3320658206939697,-0.7572206854820251,-0.11874999850988388],
  [0.5892059206962585,-0.4277713894844055,0],
  [0.5236067771911621,-0.38042259216308594,0],
  [0.5236067771911621,-0.38042259216308594,0],
  [0.20450849831104279,-0.6294124126434326,0],
  [0.3320658206939697,-0.7572206854820251,-0.11874999850988388],
  [0.5892059206962585,-0.4277713894844055,0],
  [0.3320658206939697,-0.7572206854820251,-0.11874999850988388],
  [0.38789916038513184,-0.8071280717849731,-0.05999999865889549],
  [0.6384052038192749,-0.463282972574234,0.02500000037252903],
  [0.5892059206962585,-0.4277713894844055,0],
  [0.38789916038513184,-0.8071280717849731,-0.05999999865889549],
  [-0.20000000298023224,-0.6155366897583008,0],
  [0.02158292382955551,-0.8449272513389587,-0.11874999850988388],
  [0.20450849831104279,-0.6294124126434326,0],
  [-0.20000000298023224,-0.6155366897583008,0],
  [-0.22407843172550201,-0.6927782297134399,0],
  [0.02158292382955551,-0.8449272513389587,-0.11874999850988388],
  [0.02158292382955551,-0.8449272513389587,-0.11874999850988388],
  [-0.22407843172550201,-0.6927782297134399,0],
  [-0.24213725328445435,-0.7507093548774719,0.02500000037252903],
  [0.05505850166082382,-0.9028480648994446,-0.05999999865889549],
  [0.02158292382955551,-0.8449272513389587,-0.11874999850988388],
  [-0.24213725328445435,-0.7507093548774719,0.02500000037252903],
  [-0.2802214026451111,-1.3200035095214844,-1.2228493690490723],
  [-0.36777931451797485,-1.3590805530548096,-1.2228246927261353],
  [-0.2976093292236328,-1.4015741348266602,-1.2227903604507446],
  [-0.21605020761489868,-1.39102303981781,-1.2227944135665894],
  [-0.2802214026451111,-1.3200035095214844,-1.2228493690490723],
  [-0.2976093292236328,-1.4015741348266602,-1.2227903604507446],
  [-0.04060809314250946,-1.2132552862167358,-1.2229169607162476],
  [-0.21605020761489868,-1.39102303981781,-1.2227944135665894],
  [0.016949808225035667,-1.2872684001922607,-1.2228600978851318],
  [-0.04060809314250946,-1.2132552862167358,-1.2229169607162476],
  [-0.2802214026451111,-1.3200035095214844,-1.2228493690490723],
  [-0.21605020761489868,-1.39102303981781,-1.2227944135665894],
  [-0.2802214026451111,-1.3200035095214844,-1.2228493690490723],
  [-0.04060809314250946,-1.2132552862167358,-1.2229169607162476],
  [-0.20893438160419464,-1.0297255516052246,-1.2230591773986816],
  [-0.20893438160419464,-1.0297255516052246,-1.2230591773986816],
  [-0.4555714428424835,-1.1255329847335815,-1.222999930381775],
  [-0.2802214026451111,-1.3200035095214844,-1.2228493690490723],
  [-0.36777931451797485,-1.3590805530548096,-1.2228246927261353],
  [-0.2802214026451111,-1.3200035095214844,-1.2228493690490723],
  [-0.4555714428424835,-1.1255329847335815,-1.222999930381775],
  [-0.4555714428424835,-1.1255329847335815,-1.222999930381775],
  [-0.5378567576408386,-1.1702593564987183,-1.2229708433151245],
  [-0.36777931451797485,-1.3590805530548096,-1.2228246927261353],
  [0.2257281392812729,-0.9900774955749512,-0.09375],
  [0.08227932453155518,-1.148319125175476,-0.4749999940395355],
  [-0.0011937734670937061,-1.1786527633666992,-0.4749999940395355],
  [0.2257281392812729,-0.9900774955749512,-0.09375],
  [0.28998443484306335,-0.9485488533973694,-0.09375],
  [0.08227932453155518,-1.148319125175476,-0.4749999940395355],
  [0.08227932453155518,-1.148319125175476,-0.4749999940395355],
  [0.12412513792514801,-1.0877889394760132,-0.4749999940395355],
  [0.02328699454665184,-1.2721091508865356,-0.8980000019073486],
  [-0.125425785779953,-1.348089337348938,-0.8687499761581421],
  [0.08227932453155518,-1.148319125175476,-0.4749999940395355],
  [0.02328699454665184,-1.2721091508865356,-0.8980000019073486],
  [0.15007317066192627,-0.9807151556015015,-0.09375],
  [-0.08437231928110123,-1.1484469175338745,-0.4749999940395355],
  [-0.1258523315191269,-1.0879807472229004,-0.4749999940395355],
  [0.05505850166082382,-0.9028480648994446,-0.05999999865889549],
  [0.15007317066192627,-0.9807151556015015,-0.09375],
  [-0.1258523315191269,-1.0879807472229004,-0.4749999940395355],
  [-0.08437231928110123,-1.1484469175338745,-0.4749999940395355],
  [-0.0011937734670937061,-1.1786527633666992,-0.4749999940395355],
  [-0.22811569273471832,-1.3672279119491577,-0.8687499761581421],
  [-0.22811569273471832,-1.3672279119491577,-0.8687499761581421],
  [-0.3188178241252899,-1.316178798675537,-0.8687499761581421],
  [-0.08437231928110123,-1.1484469175338745,-0.4749999940395355],
  [0.02158292382955551,-0.8449272513389587,-0.11874999850988388],
  [-0.08422979712486267,-1.0275330543518066,-0.4749999940395355],
  [-0.0009799828985705972,-0.9972818493843079,-0.4749999940395355],
  [-0.0009799828985705972,-0.9972818493843079,-0.4749999940395355],
  [0.20450849831104279,-0.6294124126434326,0],
  [0.02158292382955551,-0.8449272513389587,-0.11874999850988388],
  [0.05505850166082382,-0.9028480648994446,-0.05999999865889549],
  [-0.1258523315191269,-1.0879807472229004,-0.4749999940395355],
  [-0.08422979712486267,-1.0275330543518066,-0.4749999940395355],
  [-0.08422979712486267,-1.0275330543518066,-0.4749999940395355],
  [0.02158292382955551,-0.8449272513389587,-0.11874999850988388],
  [0.05505850166082382,-0.9028480648994446,-0.05999999865889549],
  [-0.4065726399421692,-1.052430272102356,-0.831250011920929],
  [-0.1258523315191269,-1.0879807472229004,-0.4749999940395355],
  [-0.46889224648475647,-1.1768107414245605,-0.8980000019073486],
  [-0.4065726399421692,-1.052430272102356,-0.831250011920929],
  [-0.08422979712486267,-1.0275330543518066,-0.4749999940395355],
  [-0.1258523315191269,-1.0879807472229004,-0.4749999940395355],
  [-0.08422979712486267,-1.0275330543518066,-0.4749999940395355],
  [-0.4065726399421692,-1.052430272102356,-0.831250011920929],
  [-0.18348610401153564,-1.0207170248031616,-0.9163589477539062],
  [-0.0009799828985705972,-0.9972818493843079,-0.4749999940395355],
  [-0.08422979712486267,-1.0275330543518066,-0.4749999940395355],
  [-0.18348610401153564,-1.0207170248031616,-0.9163589477539062],
  [0.3320658206939697,-0.7572206854820251,-0.11874999850988388],
  [0.08242184668779373,-1.0274052619934082,-0.4749999940395355],
  [0.12412513792514801,-1.0877889394760132,-0.4749999940395355],
  [0.38789916038513184,-0.8071280717849731,-0.05999999865889549],
  [0.3320658206939697,-0.7572206854820251,-0.11874999850988388],
  [0.12412513792514801,-1.0877889394760132,-0.4749999940395355],
  [-0.0009799828985705972,-0.9972818493843079,-0.4749999940395355],
  [0.08242184668779373,-1.0274052619934082,-0.4749999940395355],
  [0.3320658206939697,-0.7572206854820251,-0.11874999850988388],
  [0.20450849831104279,-0.6294124126434326,0],
  [-0.0009799828985705972,-0.9972818493843079,-0.4749999940395355],
  [0.3320658206939697,-0.7572206854820251,-0.11874999850988388],
  [0.05005363002419472,-1.1401206254959106,-0.831250011920929],
  [-0.0009799828985705972,-0.9972818493843079,-0.4749999940395355],
  [-0.18348610401153564,-1.0207170248031616,-0.9163589477539062],
  [0.05005363002419472,-1.1401206254959106,-0.831250011920929],
  [0.08242184668779373,-1.0274052619934082,-0.4749999940395355],
  [-0.0009799828985705972,-0.9972818493843079,-0.4749999940395355],
  [0.12412513792514801,-1.0877889394760132,-0.4749999940395355],
  [0.08242184668779373,-1.0274052619934082,-0.4749999940395355],
  [0.05005363002419472,-1.1401206254959106,-0.831250011920929],
  [0.02328699454665184,-1.2721091508865356,-0.8980000019073486],
  [0.12412513792514801,-1.0877889394760132,-0.4749999940395355],
  [0.05005363002419472,-1.1401206254959106,-0.831250011920929],
  [-0.19466082751750946,-1.4146795272827148,-1.100000023841858],
  [-0.30375632643699646,-1.430086374282837,-1.100000023841858],
  [-0.22811569273471832,-1.3672279119491577,-0.8687499761581421],
  [-0.125425785779953,-1.348089337348938,-0.8687499761581421],
  [-0.19466082751750946,-1.4146795272827148,-1.100000023841858],
  [-0.22811569273471832,-1.3672279119491577,-0.8687499761581421],
  [-0.19466082751750946,-1.4146795272827148,-1.100000023841858],
  [0.0361347496509552,-1.3119226694107056,-1.100000023841858],
  [0.016949808225035667,-1.2872684001922607,-1.2228600978851318],
  [-0.21605020761489868,-1.39102303981781,-1.2227944135665894],
  [-0.19466082751750946,-1.4146795272827148,-1.100000023841858],
  [0.016949808225035667,-1.2872684001922607,-1.2228600978851318],
  [-0.3969663083553314,-1.3720893859863281,-1.100000023841858],
  [-0.5652862191200256,-1.185151219367981,-1.100000023841858],
  [-0.46889224648475647,-1.1768107414245605,-0.8980000019073486],
  [-0.46889224648475647,-1.1768107414245605,-0.8980000019073486],
  [-0.3188178241252899,-1.316178798675537,-0.8687499761581421],
  [-0.3969663083553314,-1.3720893859863281,-1.100000023841858],
  [-0.30375632643699646,-1.430086374282837,-1.100000023841858],
  [-0.2976093292236328,-1.4015741348266602,-1.2227903604507446],
  [-0.36777931451797485,-1.3590805530548096,-1.2228246927261353],
  [-0.3969663083553314,-1.3720893859863281,-1.100000023841858],
  [-0.30375632643699646,-1.430086374282837,-1.100000023841858],
  [-0.36777931451797485,-1.3590805530548096,-1.2228246927261353],
  [-0.5378567576408386,-1.1702593564987183,-1.2229708433151245],
  [-0.4555714428424835,-1.1255329847335815,-1.222999930381775],
  [-0.810502827167511,-0.7314338088035583,-1.2233049869537354],
  [-0.810502827167511,-0.7314338088035583,-1.2233049869537354],
  [-0.8774086236953735,-0.7931718826293945,-1.2232626676559448],
  [-0.5378567576408386,-1.1702593564987183,-1.2229708433151245],
  [-0.7470641136169434,-0.6746591925621033,-1.2233437299728394],
  [-0.810502827167511,-0.7314338088035583,-1.2233049869537354],
  [-0.4555714428424835,-1.1255329847335815,-1.222999930381775],
  [-0.20893438160419464,-1.0297255516052246,-1.2230591773986816],
  [-0.7470641136169434,-0.6746591925621033,-1.2233437299728394],
  [-0.4555714428424835,-1.1255329847335815,-1.222999930381775],
  [-0.5652862191200256,-1.185151219367981,-1.100000023841858],
  [-0.5378567576408386,-1.1702593564987183,-1.2229708433151245],
  [-0.8774086236953735,-0.7931718826293945,-1.2232626676559448],
  [-0.8997116088867188,-0.813734233379364,-1.100000023841858],
  [-0.5652862191200256,-1.185151219367981,-1.100000023841858],
  [-0.8774086236953735,-0.7931718826293945,-1.2232626676559448],
  [-0.4065726399421692,-1.052430272102356,-0.831250011920929],
  [-0.7454925775527954,-0.6679895520210266,-0.9876444339752197],
  [-0.18348610401153564,-1.0207170248031616,-0.9163589477539062],
  [-0.4065726399421692,-1.052430272102356,-0.831250011920929],
  [-0.8105016350746155,-0.7314533591270447,-0.949999988079071],
  [-0.7454925775527954,-0.6679895520210266,-0.9876444339752197],
  [-0.8105016350746155,-0.7314533591270447,-0.949999988079071],
  [-0.4065726399421692,-1.052430272102356,-0.831250011920929],
  [-0.46889224648475647,-1.1768107414245605,-0.8980000019073486],
  [-0.8774091005325317,-0.7931640148162842,-0.987500011920929],
  [-0.8105016350746155,-0.7314533591270447,-0.949999988079071],
  [-0.46889224648475647,-1.1768107414245605,-0.8980000019073486],
  [-0.23096874356269836,-1.032368779182434,-1.097254991531372],
  [-0.7433624863624573,-0.676729142665863,-1.098423957824707],
  [-0.7470641136169434,-0.6746591925621033,-1.2233437299728394],
  [-0.20893438160419464,-1.0297255516052246,-1.2230591773986816],
  [-0.23096874356269836,-1.032368779182434,-1.097254991531372],
  [-0.7470641136169434,-0.6746591925621033,-1.2233437299728394],
  [-0.7454925775527954,-0.6679895520210266,-0.9876444339752197],
  [-0.7433624863624573,-0.676729142665863,-1.098423957824707],
  [-0.23096874356269836,-1.032368779182434,-1.097254991531372],
  [-0.23096874356269836,-1.032368779182434,-1.097254991531372],
  [-0.18348610401153564,-1.0207170248031616,-0.9163589477539062],
  [-0.7454925775527954,-0.6679895520210266,-0.9876444339752197],
  [-0.04060809314250946,-1.2132552862167358,-1.2229169607162476],
  [0.44473960995674133,-0.9971428513526917,-1.2230536937713623],
  [0.41523170471191406,-0.9198882579803467,-1.2231117486953735],
  [0.41523170471191406,-0.9198882579803467,-1.2231117486953735],
  [-0.20893438160419464,-1.0297255516052246,-1.2230591773986816],
  [-0.04060809314250946,-1.2132552862167358,-1.2229169607162476],
  [0.016949808225035667,-1.2872684001922607,-1.2228600978851318],
  [0.4820193946361542,-1.0802006721496582,-1.2229911088943481],
  [0.44473960995674133,-0.9971428513526917,-1.2230536937713623],
  [0.44473960995674133,-0.9971428513526917,-1.2230536937713623],
  [-0.04060809314250946,-1.2132552862167358,-1.2229169607162476],
  [0.016949808225035667,-1.2872684001922607,-1.2228600978851318],
  [0.4077207148075104,-0.9191699624061584,-1.0990933179855347],
  [0.4097861647605896,-0.9109184741973877,-0.9873128533363342],
  [-0.18348610401153564,-1.0207170248031616,-0.9163589477539062],
  [-0.23096874356269836,-1.032368779182434,-1.097254991531372],
  [0.4077207148075104,-0.9191699624061584,-1.0990933179855347],
  [-0.18348610401153564,-1.0207170248031616,-0.9163589477539062],
  [0.4077207148075104,-0.9191699624061584,-1.0990933179855347],
  [-0.23096874356269836,-1.032368779182434,-1.097254991531372],
  [-0.20893438160419464,-1.0297255516052246,-1.2230591773986816],
  [0.41523170471191406,-0.9198882579803467,-1.2231117486953735],
  [0.4077207148075104,-0.9191699624061584,-1.0990933179855347],
  [-0.20893438160419464,-1.0297255516052246,-1.2230591773986816],
  [0.05005363002419472,-1.1401206254959106,-0.831250011920929],
  [0.44474080204963684,-0.9971626400947571,-0.949999988079071],
  [0.48201891779899597,-1.080193042755127,-0.987500011920929],
  [0.48201891779899597,-1.080193042755127,-0.987500011920929],
  [0.02328699454665184,-1.2721091508865356,-0.8980000019073486],
  [0.05005363002419472,-1.1401206254959106,-0.831250011920929],
  [0.4097861647605896,-0.9109184741973877,-0.9873128533363342],
  [0.44474080204963684,-0.9971626400947571,-0.949999988079071],
  [0.05005363002419472,-1.1401206254959106,-0.831250011920929],
  [0.05005363002419472,-1.1401206254959106,-0.831250011920929],
  [-0.18348610401153564,-1.0207170248031616,-0.9163589477539062],
  [0.4097861647605896,-0.9109184741973877,-0.9873128533363342],
  [0.48201891779899597,-1.080193042755127,-0.987500011920929],
  [0.49444496631622314,-1.1078698635101318,-1.100000023841858],
  [0.0361347496509552,-1.3119226694107056,-1.100000023841858],
  [0.0361347496509552,-1.3119226694107056,-1.100000023841858],
  [0.02328699454665184,-1.2721091508865356,-0.8980000019073486],
  [0.48201891779899597,-1.080193042755127,-0.987500011920929],
  [0.06872936338186264,-0.8729823231697083,0.10000000149011612],
  [0.05505850166082382,-0.9028480648994446,-0.05999999865889549],
  [-0.24213725328445435,-0.7507093548774719,0.02500000037252903],
  [-0.2481568604707718,-0.7700197696685791,0.10000000149011612],
  [0.06872936338186264,-0.8729823231697083,0.10000000149011612],
  [-0.24213725328445435,-0.7507093548774719,0.02500000037252903],
  [0.22822165489196777,-0.9248045086860657,0.10000000149011612],
  [0.301368772983551,-0.9272190928459167,0.10000000149011612],
  [0.2257281392812729,-0.9900774955749512,-0.09375],
  [0.2257281392812729,-0.9900774955749512,-0.09375],
  [0.15007317066192627,-0.9807151556015015,-0.09375],
  [0.22822165489196777,-0.9248045086860657,0.10000000149011612],
  [0.22822165489196777,-0.9248045086860657,0.20000000298023224],
  [0.22822165489196777,-0.9248045086860657,0.10000000149011612],
  [0.06872936338186264,-0.8729823231697083,0.10000000149011612],
  [0.06872936338186264,-0.8729823231697083,0.10000000149011612],
  [0.06872936338186264,-0.8729823231697083,0.20000000298023224],
  [0.22822165489196777,-0.9248045086860657,0.20000000298023224],
  [0.3592194616794586,-0.8819587230682373,0.10000000149011612],
  [0.4582170844078064,-0.7457001805305481,0.10000000149011612],
  [0.38789916038513184,-0.8071280717849731,-0.05999999865889549],
  [0.28998443484306335,-0.9485488533973694,-0.09375],
  [0.3592194616794586,-0.8819587230682373,0.10000000149011612],
  [0.38789916038513184,-0.8071280717849731,-0.05999999865889549],
  [0.3592194616794586,-0.8819587230682373,0.20000000298023224],
  [0.3592194616794586,-0.8819587230682373,0.10000000149011612],
  [0.301368772983551,-0.9272190928459167,0.10000000149011612],
  [0.301368772983551,-0.9272190928459167,0.10000000149011612],
  [0.301368772983551,-0.9272190928459167,0.20000000298023224],
  [0.3592194616794586,-0.8819587230682373,0.20000000298023224],
  [0.6548050045967102,-0.4751201570034027,0.20000000298023224],
  [0.6548050045967102,-0.4751201570034027,0.10000000149011612],
  [0.4582170844078064,-0.7457001805305481,0.10000000149011612],
  [0.4582170844078064,-0.7457001805305481,0.10000000149011612],
  [0.4582170844078064,-0.7457001805305481,0.20000000298023224],
  [0.6548050045967102,-0.4751201570034027,0.20000000298023224],
  [0.5236067771911621,-0.38042259216308594,0],
  [-0.20000000298023224,-0.6155366897583008,0],
  [0.20450849831104279,-0.6294124126434326,0],
  [0.6544321179389954,-0.7090318202972412,0.013367711566388607],
  [0.38789916038513184,-0.8071280717849731,-0.05999999865889549],
  [0.4582170844078064,-0.7457001805305481,0.10000000149011612],
  [0.38789916038513184,-0.8071280717849731,-0.05999999865889549],
  [0.6544321179389954,-0.7090318202972412,0.013367711566388607],
  [0.6384052038192749,-0.463282972574234,0.02500000037252903],
  [0.6544321179389954,-0.7090318202972412,0.013367711566388607],
  [0.6548050045967102,-0.4751201570034027,0.10000000149011612],
  [0.6384052038192749,-0.463282972574234,0.02500000037252903],
  [0.4582170844078064,-0.7457001805305481,0.10000000149011612],
  [0.6548050045967102,-0.4751201570034027,0.10000000149011612],
  [0.6544321179389954,-0.7090318202972412,0.013367711566388607],
  [0.3592194616794586,-0.8819587230682373,0.20000000298023224],
  [0.4582170844078064,-0.7457001805305481,0.20000000298023224],
  [0.5295758247375488,-0.9026785492897034,0.14949999749660492],
  [0.3592194616794586,-0.8819587230682373,0.10000000149011612],
  [0.3592194616794586,-0.8819587230682373,0.20000000298023224],
  [0.5295758247375488,-0.9026785492897034,0.14949999749660492],
  [0.5295758247375488,-0.9026785492897034,0.14949999749660492],
  [0.4582170844078064,-0.7457001805305481,0.10000000149011612],
  [0.3592194616794586,-0.8819587230682373,0.10000000149011612],
  [0.5295758247375488,-0.9026785492897034,0.14949999749660492],
  [0.4582170844078064,-0.7457001805305481,0.20000000298023224],
  [0.4582170844078064,-0.7457001805305481,0.10000000149011612],
  [0.3801575005054474,-1.0595566034317017,0.010497120209038258],
  [0.2257281392812729,-0.9900774955749512,-0.09375],
  [0.301368772983551,-0.9272190928459167,0.10000000149011612],
  [0.28998443484306335,-0.9485488533973694,-0.09375],
  [0.2257281392812729,-0.9900774955749512,-0.09375],
  [0.3801575005054474,-1.0595566034317017,0.010497120209038258],
  [0.3801575005054474,-1.0595566034317017,0.010497120209038258],
  [0.3592194616794586,-0.8819587230682373,0.10000000149011612],
  [0.28998443484306335,-0.9485488533973694,-0.09375],
  [0.3592194616794586,-0.8819587230682373,0.10000000149011612],
  [0.3801575005054474,-1.0595566034317017,0.010497120209038258],
  [0.301368772983551,-0.9272190928459167,0.10000000149011612],
  [0.259480744600296,-1.0759180784225464,0.15049999952316284],
  [0.22822165489196777,-0.9248045086860657,0.20000000298023224],
  [0.301368772983551,-0.9272190928459167,0.20000000298023224],
  [0.22822165489196777,-0.9248045086860657,0.10000000149011612],
  [0.22822165489196777,-0.9248045086860657,0.20000000298023224],
  [0.259480744600296,-1.0759180784225464,0.15049999952316284],
  [0.301368772983551,-0.9272190928459167,0.10000000149011612],
  [0.22822165489196777,-0.9248045086860657,0.10000000149011612],
  [0.259480744600296,-1.0759180784225464,0.15049999952316284],
  [0.259480744600296,-1.0759180784225464,0.15049999952316284],
  [0.301368772983551,-0.9272190928459167,0.20000000298023224],
  [0.301368772983551,-0.9272190928459167,0.10000000149011612],
  [0.06510552763938904,-1.0495378971099854,0.05771590396761894],
  [0.05505850166082382,-0.9028480648994446,-0.05999999865889549],
  [0.06872936338186264,-0.8729823231697083,0.10000000149011612],
  [0.15007317066192627,-0.9807151556015015,-0.09375],
  [0.05505850166082382,-0.9028480648994446,-0.05999999865889549],
  [0.06510552763938904,-1.0495378971099854,0.05771590396761894],
  [0.06510552763938904,-1.0495378971099854,0.05771590396761894],
  [0.22822165489196777,-0.9248045086860657,0.10000000149011612],
  [0.15007317066192627,-0.9807151556015015,-0.09375],
  [0.22822165489196777,-0.9248045086860657,0.10000000149011612],
  [0.06510552763938904,-1.0495378971099854,0.05771590396761894],
  [0.06872936338186264,-0.8729823231697083,0.10000000149011612],
  [-0.137650728225708,-0.9636446833610535,0.15049999952316284],
  [-0.2481568604707718,-0.7700197696685791,0.20000000298023224],
  [0.06872936338186264,-0.8729823231697083,0.20000000298023224],
  [-0.2481568604707718,-0.7700197696685791,0.10000000149011612],
  [-0.2481568604707718,-0.7700197696685791,0.20000000298023224],
  [-0.137650728225708,-0.9636446833610535,0.15049999952316284],
  [0.06872936338186264,-0.8729823231697083,0.10000000149011612],
  [-0.2481568604707718,-0.7700197696685791,0.10000000149011612],
  [-0.137650728225708,-0.9636446833610535,0.15049999952316284],
  [-0.137650728225708,-0.9636446833610535,0.15049999952316284],
  [0.06872936338186264,-0.8729823231697083,0.20000000298023224],
  [0.06872936338186264,-0.8729823231697083,0.10000000149011612],
  [0.313889741897583,-1.3300219774246216,-1.1958651542663574],
  [0.31854045391082764,-1.327951192855835,-1.1958651542663574],
  [0.4820193946361542,-1.0802006721496582,-1.2229911088943481],
  [0.4820193946361542,-1.0802006721496582,-1.2229911088943481],
  [0.016949808225035667,-1.2872684001922607,-1.2228600978851318],
  [0.313889741897583,-1.3300219774246216,-1.1958651542663574],
  [0.4820193946361542,-1.0802006721496582,-1.2229911088943481],
  [0.31854045391082764,-1.327951192855835,-1.1958651542663574],
  [0.49444496631622314,-1.1078698635101318,-1.100000023841858],
  [0.31854045391082764,-1.327951192855835,-1.1958651542663574],
  [0.313889741897583,-1.3300219774246216,-1.1958651542663574],
  [0.0361347496509552,-1.3119226694107056,-1.100000023841858],
  [0.49444496631622314,-1.1078698635101318,-1.100000023841858],
  [0.31854045391082764,-1.327951192855835,-1.1958651542663574],
  [0.0361347496509552,-1.3119226694107056,-1.100000023841858],
  [0.313889741897583,-1.3300219774246216,-1.1958651542663574],
  [0.016949808225035667,-1.2872684001922607,-1.2228600978851318],
  [0.0361347496509552,-1.3119226694107056,-1.100000023841858],
  [-0.804556667804718,-1.0907522439956665,-0.9719749689102173],
  [-0.46889224648475647,-1.1768107414245605,-0.8980000019073486],
  [-0.5652862191200256,-1.185151219367981,-1.100000023841858],
  [-0.804556667804718,-1.0907522439956665,-0.9719749689102173],
  [-0.8086418509483337,-1.0869157314300537,-0.9728699922561646],
  [-0.8774091005325317,-0.7931640148162842,-0.987500011920929],
  [-0.46889224648475647,-1.1768107414245605,-0.8980000019073486],
  [-0.804556667804718,-1.0907522439956665,-0.9719749689102173],
  [-0.8774091005325317,-0.7931640148162842,-0.987500011920929],
  [-0.8086418509483337,-1.0869157314300537,-0.9728699922561646],
  [-0.8997116088867188,-0.813734233379364,-1.100000023841858],
  [-0.8774091005325317,-0.7931640148162842,-0.987500011920929],
  [-0.8086418509483337,-1.0869157314300537,-0.9728699922561646],
  [-0.804556667804718,-1.0907522439956665,-0.9719749689102173],
  [-0.5652862191200256,-1.185151219367981,-1.100000023841858],
  [-0.5652862191200256,-1.185151219367981,-1.100000023841858],
  [-0.8997116088867188,-0.813734233379364,-1.100000023841858],
  [-0.8086418509483337,-1.0869157314300537,-0.9728699922561646],
  [-0.5735895037651062,-1.3694249391555786,-1.195913314819336],
  [-0.36777931451797485,-1.3590805530548096,-1.2228246927261353],
  [-0.5378567576408386,-1.1702593564987183,-1.2229708433151245],
  [-0.36777931451797485,-1.3590805530548096,-1.2228246927261353],
  [-0.5735895037651062,-1.3694249391555786,-1.195913314819336],
  [-0.3969663083553314,-1.3720893859863281,-1.100000023841858],
  [-0.5735895037651062,-1.3694249391555786,-1.195913314819336],
  [-0.5652862191200256,-1.185151219367981,-1.100000023841858],
  [-0.3969663083553314,-1.3720893859863281,-1.100000023841858],
  [-0.5652862191200256,-1.185151219367981,-1.100000023841858],
  [-0.5735895037651062,-1.3694249391555786,-1.195913314819336],
  [-0.5378567576408386,-1.1702593564987183,-1.2229708433151245],
  [-0.3823380470275879,-1.4915411472320557,-0.9286590814590454],
  [-0.22811569273471832,-1.3672279119491577,-0.8687499761581421],
  [-0.30375632643699646,-1.430086374282837,-1.100000023841858],
  [-0.22811569273471832,-1.3672279119491577,-0.8687499761581421],
  [-0.3823380470275879,-1.4915411472320557,-0.9286590814590454],
  [-0.3188178241252899,-1.316178798675537,-0.8687499761581421],
  [-0.3823380470275879,-1.4915411472320557,-0.9286590814590454],
  [-0.3969663083553314,-1.3720893859863281,-1.100000023841858],
  [-0.3188178241252899,-1.316178798675537,-0.8687499761581421],
  [-0.30375632643699646,-1.430086374282837,-1.100000023841858],
  [-0.3969663083553314,-1.3720893859863281,-1.100000023841858],
  [-0.3823380470275879,-1.4915411472320557,-0.9286590814590454],
  [-0.23908701539039612,-1.5532269477844238,-1.1890579462051392],
  [-0.21605020761489868,-1.39102303981781,-1.2227944135665894],
  [-0.2976093292236328,-1.4015741348266602,-1.2227903604507446],
  [-0.23908701539039612,-1.5532269477844238,-1.1890579462051392],
  [-0.19466082751750946,-1.4146795272827148,-1.100000023841858],
  [-0.21605020761489868,-1.39102303981781,-1.2227944135665894],
  [-0.19466082751750946,-1.4146795272827148,-1.100000023841858],
  [-0.23908701539039612,-1.5532269477844238,-1.1890579462051392],
  [-0.30375632643699646,-1.430086374282837,-1.100000023841858],
  [-0.23908701539039612,-1.5532269477844238,-1.1890579462051392],
  [-0.2976093292236328,-1.4015741348266602,-1.2227903604507446],
  [-0.30375632643699646,-1.430086374282837,-1.100000023841858],
  [0.000314778124447912,-1.469233751296997,-0.9664497375488281],
  [0.02328699454665184,-1.2721091508865356,-0.8980000019073486],
  [0.0361347496509552,-1.3119226694107056,-1.100000023841858],
  [-0.125425785779953,-1.348089337348938,-0.8687499761581421],
  [0.02328699454665184,-1.2721091508865356,-0.8980000019073486],
  [0.000314778124447912,-1.469233751296997,-0.9664497375488281],
  [0.000314778124447912,-1.469233751296997,-0.9664497375488281],
  [-0.19466082751750946,-1.4146795272827148,-1.100000023841858],
  [-0.125425785779953,-1.348089337348938,-0.8687499761581421],
  [0.0361347496509552,-1.3119226694107056,-1.100000023841858],
  [-0.19466082751750946,-1.4146795272827148,-1.100000023841858],
  [0.000314778124447912,-1.469233751296997,-0.9664497375488281],
  [-0.46889224648475647,-1.1768107414245605,-0.8980000019073486],
  [-0.34325167536735535,-1.259779930114746,-0.5913734436035156],
  [-0.3188178241252899,-1.316178798675537,-0.8687499761581421],
  [-0.34325167536735535,-1.259779930114746,-0.5913734436035156],
  [-0.08437231928110123,-1.1484469175338745,-0.4749999940395355],
  [-0.3188178241252899,-1.316178798675537,-0.8687499761581421],
  [-0.08437231928110123,-1.1484469175338745,-0.4749999940395355],
  [-0.34325167536735535,-1.259779930114746,-0.5913734436035156],
  [-0.1258523315191269,-1.0879807472229004,-0.4749999940395355],
  [-0.34325167536735535,-1.259779930114746,-0.5913734436035156],
  [-0.46889224648475647,-1.1768107414245605,-0.8980000019073486],
  [-0.1258523315191269,-1.0879807472229004,-0.4749999940395355],
  [0.2257281392812729,-0.9900774955749512,-0.09375],
  [0.04223761707544327,-1.198361873626709,-0.20532339811325073],
  [0.15007317066192627,-0.9807151556015015,-0.09375],
  [0.04223761707544327,-1.198361873626709,-0.20532339811325073],
  [-0.08437231928110123,-1.1484469175338745,-0.4749999940395355],
  [0.15007317066192627,-0.9807151556015015,-0.09375],
  [-0.08437231928110123,-1.1484469175338745,-0.4749999940395355],
  [0.04223761707544327,-1.198361873626709,-0.20532339811325073],
  [-0.0011937734670937061,-1.1786527633666992,-0.4749999940395355],
  [0.04223761707544327,-1.198361873626709,-0.20532339811325073],
  [0.2257281392812729,-0.9900774955749512,-0.09375],
  [-0.0011937734670937061,-1.1786527633666992,-0.4749999940395355],
  [-0.125425785779953,-1.348089337348938,-0.8687499761581421],
  [-0.22811569273471832,-1.3672279119491577,-0.8687499761581421],
  [-0.032155849039554596,-1.3989139795303345,-0.6262157559394836],
  [-0.032155849039554596,-1.3989139795303345,-0.6262157559394836],
  [0.08227932453155518,-1.148319125175476,-0.4749999940395355],
  [-0.125425785779953,-1.348089337348938,-0.8687499761581421],
  [0.08227932453155518,-1.148319125175476,-0.4749999940395355],
  [-0.032155849039554596,-1.3989139795303345,-0.6262157559394836],
  [-0.0011937734670937061,-1.1786527633666992,-0.4749999940395355],
  [-0.032155849039554596,-1.3989139795303345,-0.6262157559394836],
  [-0.22811569273471832,-1.3672279119491577,-0.8687499761581421],
  [-0.0011937734670937061,-1.1786527633666992,-0.4749999940395355],
  [0.28998443484306335,-0.9485488533973694,-0.09375],
  [0.38789916038513184,-0.8071280717849731,-0.05999999865889549],
  [0.3453625738620758,-1.0789806842803955,-0.2981114685535431],
  [0.3453625738620758,-1.0789806842803955,-0.2981114685535431],
  [0.08227932453155518,-1.148319125175476,-0.4749999940395355],
  [0.28998443484306335,-0.9485488533973694,-0.09375],
  [0.08227932453155518,-1.148319125175476,-0.4749999940395355],
  [0.3453625738620758,-1.0789806842803955,-0.2981114685535431],
  [0.12412513792514801,-1.0877889394760132,-0.4749999940395355],
  [0.3453625738620758,-1.0789806842803955,-0.2981114685535431],
  [0.38789916038513184,-0.8071280717849731,-0.05999999865889549],
  [0.12412513792514801,-1.0877889394760132,-0.4749999940395355],
  [0.4077207148075104,-0.9191699624061584,-1.0990933179855347],
  [0.41523170471191406,-0.9198882579803467,-1.2231117486953735],
  [0.44473960995674133,-0.9971428513526917,-1.2230536937713623],
  [0.49444496631622314,-1.1078698635101318,-1.100000023841858],
  [0.4077207148075104,-0.9191699624061584,-1.0990933179855347],
  [0.44473960995674133,-0.9971428513526917,-1.2230536937713623],
  [0.44474080204963684,-0.9971626400947571,-0.949999988079071],
  [0.4097861647605896,-0.9109184741973877,-0.9873128533363342],
  [0.4077207148075104,-0.9191699624061584,-1.0990933179855347],
  [0.48201891779899597,-1.080193042755127,-0.987500011920929],
  [0.44474080204963684,-0.9971626400947571,-0.949999988079071],
  [0.4077207148075104,-0.9191699624061584,-1.0990933179855347],
  [0.49444496631622314,-1.1078698635101318,-1.100000023841858],
  [0.48201891779899597,-1.080193042755127,-0.987500011920929],
  [0.4077207148075104,-0.9191699624061584,-1.0990933179855347],
  [0.44473960995674133,-0.9971428513526917,-1.2230536937713623],
  [0.4820193946361542,-1.0802006721496582,-1.2229911088943481],
  [0.49444496631622314,-1.1078698635101318,-1.100000023841858],
  [-0.8997116088867188,-0.813734233379364,-1.100000023841858],
  [-0.8774086236953735,-0.7931718826293945,-1.2232626676559448],
  [-0.810502827167511,-0.7314338088035583,-1.2233049869537354],
  [-0.7433624863624573,-0.676729142665863,-1.098423957824707],
  [-0.8997116088867188,-0.813734233379364,-1.100000023841858],
  [-0.810502827167511,-0.7314338088035583,-1.2233049869537354],
  [-0.7433624863624573,-0.676729142665863,-1.098423957824707],
  [-0.7454925775527954,-0.6679895520210266,-0.9876444339752197],
  [-0.8105016350746155,-0.7314533591270447,-0.949999988079071],
  [-0.8774091005325317,-0.7931640148162842,-0.987500011920929],
  [-0.8997116088867188,-0.813734233379364,-1.100000023841858],
  [-0.7433624863624573,-0.676729142665863,-1.098423957824707],
  [-0.8105016350746155,-0.7314533591270447,-0.949999988079071],
  [-0.8774091005325317,-0.7931640148162842,-0.987500011920929],
  [-0.7433624863624573,-0.676729142665863,-1.098423957824707],
  [-0.810502827167511,-0.7314338088035583,-1.2233049869537354],
  [-0.7470641136169434,-0.6746591925621033,-1.2233437299728394],
  [-0.7433624863624573,-0.676729142665863,-1.098423957824707],
  [-0.24213725328445435,-0.7507093548774719,0.02500000037252903],
  [-0.20000000298023224,-0.6155366897583008,0],
  [-0.2481568604707718,-0.7700197696685791,0.10000000149011612],
  [-0.20000000298023224,-0.6155366897583008,0],
  [-0.24213725328445435,-0.7507093548774719,0.02500000037252903],
  [-0.22407843172550201,-0.6927782297134399,0],
  [-0.2481568604707718,-0.7700197696685791,0.10000000149011612],
  [-0.20000000298023224,-0.6155366897583008,0],
  [-0.2481568604707718,-0.7700197696685791,0.20000000298023224],
  [0.3592194616794586,-0.8819587230682373,0.20000000298023224],
  [0.22822165489196777,-0.9248045086860657,0.20000000298023224],
  [0.06872936338186264,-0.8729823231697083,0.20000000298023224],
  [0.4582170844078064,-0.7457001805305481,0.20000000298023224],
  [0.3592194616794586,-0.8819587230682373,0.20000000298023224],
  [0.06872936338186264,-0.8729823231697083,0.20000000298023224],
  [0.3592194616794586,-0.8819587230682373,0.20000000298023224],
  [0.301368772983551,-0.9272190928459167,0.20000000298023224],
  [0.22822165489196777,-0.9248045086860657,0.20000000298023224],
  [0.4582170844078064,-0.7457001805305481,0.20000000298023224],
  [0.06872936338186264,-0.8729823231697083,0.20000000298023224],
  [-0.2481568604707718,-0.7700197696685791,0.20000000298023224],
  [0.6548050045967102,-0.4751201570034027,0.20000000298023224],
  [0.4582170844078064,-0.7457001805305481,0.20000000298023224],
  [-0.2481568604707718,-0.7700197696685791,0.20000000298023224],
  [0.6548050045967102,-0.4751201570034027,0.20000000298023224],
  [0.5892059206962585,-0.4277713894844055,0.10000000149011612],
  [0.6548050045967102,-0.4751201570034027,0.10000000149011612],
  [-0.2481568604707718,-0.7700197696685791,0.20000000298023224],
  [-0.20000000298023224,-0.6155366897583008,0],
  [0.5892059206962585,-0.4277713894844055,0.10000000149011612],
  [0.6548050045967102,-0.4751201570034027,0.20000000298023224],
  [-0.2481568604707718,-0.7700197696685791,0.20000000298023224],
  [0.5892059206962585,-0.4277713894844055,0.10000000149011612],
  [-0.20000000298023224,-0.6155366897583008,0],
  [0.5236067771911621,-0.38042259216308594,0],
  [0.5892059206962585,-0.4277713894844055,0.10000000149011612],
  [0.5892059206962585,-0.4277713894844055,0],
  [0.5892059206962585,-0.4277713894844055,0.10000000149011612],
  [0.5236067771911621,-0.38042259216308594,0],
  [0.6384052038192749,-0.463282972574234,0.02500000037252903],
  [0.5892059206962585,-0.4277713894844055,0.10000000149011612],
  [0.5892059206962585,-0.4277713894844055,0],
  [0.6548050045967102,-0.4751201570034027,0.10000000149011612],
  [0.5892059206962585,-0.4277713894844055,0.10000000149011612],
  [0.6384052038192749,-0.463282972574234,0.02500000037252903]],
  polygons: [
  [0,1,2],
  [3,4,5],
  [6,7,8],
  [9,10,11],
  [12,13,14],
  [15,16,17],
  [18,19,20],
  [21,22,23],
  [24,25,26],
  [27,28,29],
  [30,31,32],
  [33,34,35],
  [36,37,38],
  [39,40,41],
  [42,43,44],
  [45,46,47],
  [48,49,50],
  [51,52,53],
  [54,55,56],
  [57,58,59],
  [60,61,62],
  [63,64,65],
  [66,67,68],
  [69,70,71],
  [72,73,74],
  [75,76,77],
  [78,79,80],
  [81,82,83],
  [84,85,86],
  [87,88,89],
  [90,91,92],
  [93,94,95],
  [96,97,98],
  [99,100,101],
  [102,103,104],
  [105,106,107],
  [108,109,110],
  [111,112,113],
  [114,115,116],
  [117,118,119],
  [120,121,122],
  [123,124,125],
  [126,127,128],
  [129,130,131],
  [132,133,134],
  [135,136,137],
  [138,139,140],
  [141,142,143],
  [144,145,146],
  [147,148,149],
  [150,151,152],
  [153,154,155],
  [156,157,158],
  [159,160,161],
  [162,163,164],
  [165,166,167],
  [168,169,170],
  [171,172,173],
  [174,175,176],
  [177,178,179],
  [180,181,182],
  [183,184,185],
  [186,187,188],
  [189,190,191],
  [192,193,194],
  [195,196,197],
  [198,199,200],
  [201,202,203],
  [204,205,206],
  [207,208,209],
  [210,211,212],
  [213,214,215],
  [216,217,218],
  [219,220,221],
  [222,223,224],
  [225,226,227],
  [228,229,230],
  [231,232,233],
  [234,235,236],
  [237,238,239],
  [240,241,242],
  [243,244,245],
  [246,247,248],
  [249,250,251],
  [252,253,254],
  [255,256,257],
  [258,259,260],
  [261,262,263],
  [264,265,266],
  [267,268,269],
  [270,271,272],
  [273,274,275],
  [276,277,278],
  [279,280,281],
  [282,283,284],
  [285,286,287],
  [288,289,290],
  [291,292,293],
  [294,295,296],
  [297,298,299],
  [300,301,302],
  [303,304,305],
  [306,307,308],
  [309,310,311],
  [312,313,314],
  [315,316,317],
  [318,319,320],
  [321,322,323],
  [324,325,326],
  [327,328,329],
  [330,331,332],
  [333,334,335],
  [336,337,338],
  [339,340,341],
  [342,343,344],
  [345,346,347],
  [348,349,350],
  [351,352,353],
  [354,355,356],
  [357,358,359],
  [360,361,362],
  [363,364,365],
  [366,367,368],
  [369,370,371],
  [372,373,374],
  [375,376,377],
  [378,379,380],
  [381,382,383],
  [384,385,386],
  [387,388,389],
  [390,391,392],
  [393,394,395],
  [396,397,398],
  [399,400,401],
  [402,403,404],
  [405,406,407],
  [408,409,410],
  [411,412,413],
  [414,415,416],
  [417,418,419],
  [420,421,422],
  [423,424,425],
  [426,427,428],
  [429,430,431],
  [432,433,434],
  [435,436,437],
  [438,439,440],
  [441,442,443],
  [444,445,446],
  [447,448,449],
  [450,451,452],
  [453,454,455],
  [456,457,458],
  [459,460,461],
  [462,463,464],
  [465,466,467],
  [468,469,470],
  [471,472,473],
  [474,475,476],
  [477,478,479],
  [480,481,482],
  [483,484,485],
  [486,487,488],
  [489,490,491],
  [492,493,494],
  [495,496,497],
  [498,499,500],
  [501,502,503],
  [504,505,506],
  [507,508,509],
  [510,511,512],
  [513,514,515],
  [516,517,518],
  [519,520,521],
  [522,523,524],
  [525,526,527],
  [528,529,530],
  [531,532,533],
  [534,535,536],
  [537,538,539],
  [540,541,542],
  [543,544,545],
  [546,547,548],
  [549,550,551]] });
} 
 volume.source = function () {
	return main().scale(80);//.mirroredX();
	}
//aplat.poseTriangle(0,[0,0],0);
//aplat.fixeTriangles([]);
volume.p1 = function () { // JAUNE
	DX = 24 * gDPDF; DY = 172 * gDPDF;
	aplat.poseTriangle(152,[15,145],-35);
	aplat.fixeTriangles([152,22,23,142,141,144,143]);
	aplat.fixeTriangles([144,28,29]);
	aplat.fixeTriangle(152,149);
	
	aplat.poseTriangle(30,[15,200],30);
	aplat.fixeTriangles([30,31,36,37,38,39,18,19,150,151]);
	}
	
volume.p2 = function () { // VERT
	DX = 24 * gDPDF; DY = 172 * gDPDF;
	aplat.poseTriangle(20,[15,145],24);
	aplat.fixeTriangles([20,21,26,27,24,25,35,34,32,33,156]);	
	
	aplat.poseTriangle(155,[70,200],88);
	aplat.fixeTriangles([155,154,17,16,148,147,146]);
	aplat.fixeTriangle(148,145);
	aplat.fixeTriangle(154,153);
	}
	
volume.p3 = function () { // ROSE
	DX = 24 * gDPDF; DY = 172 * gDPDF;
	aplat.poseTriangle(157,[65,150],40);
	aplat.fixeTriangles([157,158,162,115,113,114,64,65,62,63,69,68,67,66,159,160,161]);
	aplat.fixeTriangles([114,118,116]);
	
	aplat.poseTriangle(73,[110,140],-50);
	aplat.fixeTriangles([73,72,70,71,75,74,117]);

	}
volume.p4 = function () { // MARRON
	DX = 24 * gDPDF; DY = 172 * gDPDF;
	aplat.poseTriangle(121,[50,160],71);
	aplat.fixeTriangles([121,57,56,55,54,61,60,58,168,164,163]);
	aplat.fixeTriangle(58,59);
	
	aplat.poseTriangle(51,[50,70],-42.4);
	aplat.fixeTriangles([51,50,48,49,52,53,124,123,119]);
	aplat.fixeTriangles([124,122,120]);
	aplat.fixeTriangles([122,166,167,165]);

/*	
	aplat.poseTriangle(55,[30,200]);
	aplat.fixeTriangles([55,54,61,60,58,59,51,50,48,49,52,53,124,123,119]);
	aplat.fixeTriangles([124,122,120]);
	aplat.fixeTriangles([55,56,57,121]);
	aplat.fixeTriangles([122,166,167,165]);
	aplat.fixeTriangles([58,168,164,163]);
*/
	}
volume.p5 = function () { // BLEU SOMBRE
	DX = 24 * gDPDF; DY = 172 * gDPDF;
	aplat.poseTriangle(47,[75,185],90);
	aplat.fixeTriangles([47,46,8,14,15,125,128,127,44,45,131,132,129,40]);	
	aplat.fixeTriangle(127,126);
	aplat.fixeTriangle(129,130);
	
	aplat.poseTriangle(13,[15,185],-15);
	aplat.fixeTriangles([13,12,11,9,133,136,135,134]);
	aplat.fixeTriangles([11,10,43,42,140,139,41]);
	aplat.fixeTriangles([140,137,138]);
	}
volume.p6 = function () { // BLEU CLAIR
	DX = 24 * gDPDF; DY = 172 * gDPDF;
	
	aplat.poseTriangle(88,[40,240],-20+90);
	aplat.fixeTriangles([88,180,178,179,176,175,173]);
	aplat.fixeTriangle(175,109);
	
	aplat.poseTriangle(1,[20,90],-20+77);
	aplat.fixeTriangles([1,0,2,3,90,89]);
	aplat.fixeTriangles([90,91,92,86,87,96,95,82,83,99,100]);
	aplat.fixeTriangles([99,98,97,78,79,107,108]);
	aplat.fixeTriangles([107,106,105]);
	aplat.fixeTriangles([0,181,182,183,177]);
	
	aplat.poseTriangle(4,[40,177],-20);
	aplat.fixeTriangles([4,5,6,7,76,77,111,110]);
	aplat.fixeTriangles([111,112,81,172,174]);
	aplat.fixeTriangles([81,80,102,103,104,85,84,94,93]);
	aplat.fixeTriangle(104,101);
	aplat.fixeTriangles([5,170,169,171]);
}
} // Fin volume

_pieces = ["p1","p2"];const  _gSVGScale = 16,//*0.26458, 
gPrec=0.01, g_RX=true, _gTextScale=0.1, _gLigneE=0.05, _ghEncoche=1.5;
var data = [], V, _r = {cag:[], svg:[]}, _num = [], _pieces, gDPDF,
tEnc = [];

function mkPath(cag){	
	var pts = [];
	
	ch = "<path class='L' d='";
	chP = "";

	courant = null;
	for(i in cag.sides){
		pt = cag.sides[i].vertex0.pos;
		if((!courant) || (!pt.equals(courant)) ) {
			y = 200 - pt.y;
			chP = chP + " M " + (pt.x*_gSVGScale).toFixed(2) +" "+ (y*_gSVGScale).toFixed(2);
		}
		courant = cag.sides[i].vertex1.pos;
		y = 200 - courant.y;
		chP = chP + " L " + (courant.x*_gSVGScale).toFixed(2) +" "+ (y*_gSVGScale).toFixed(2);
	}

	return ch+chP+" Z' />";
}

function getParameterDefinitions() {
  return [
	 { name:'PAGE', type:'slider', initial:1,  min:1, max:5, step:1, caption:"Page:" }
	,{ name:'DPDF', type:'choice', initial:1, caption:'Ajuster PDF ?',
	  values: [0,1], captions:['Non', 'Oui']  }
	,{ name:'MODE', type:'choice', initial:'PROD', caption:'Mode ?',
	values: ['PROD', 'DEV'], captions:['Production', 'Developpement'] }
  ];
}
function main(params) {
_pieces = ['p'+params.PAGE];
gDPDF = Number(params.DPDF);
// inclusions
aplat();
volume();

V = volume.source();
aplat.rendu(_r, _pieces);
if(params.MODE == 'PROD'){return cube();}
else return _r.cag;

}
